{"version":3,"sources":["constants/style.js","components/Header/style.js","components/Button.js","contexts.js","utils.js","components/Header/Header.js","WebApi.js","components/Article.js","components/Page.js","Page/HomePage.js","Page/ListPage.js","Page/ArticlePage.js","constants/text.js","Page/AboutPage.js","components/Input.js","components/Form.js","components/ErrorMessage.js","Page/PostPage.js","Page/LoginPage.js","Page/RegisterPage.js","components/Blog/Blog.js","reportWebVitals.js","index.js"],"names":["COLOR","MEDIA","DISTENCE","FONT","EFFECT","shadowDark","shadowLight","block","HeaderWrapper","styled","div","Wrapper","Container","Brand","Link","ButtonUnderlineHover","button","ButtonLink","isActive","content","className","Button","Nav","to","isExact","label","match","useRouteMatch","path","exact","Pagination","AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","Header","location","useLocation","history","useHistory","useContext","isGetAPI","user","setUser","onClick","pathname","push","BASE_URL","getPosts","fetch","then","response","json","getUser","headers","authorization","ArticleContainer","ArticleHoverContainer","ArticleContent","post","paragraph","title","Date","createdAt","toLocaleString","body","Article","hover","$center","as","id","Page","PageCenter","HomePage","useState","posts","setPosts","useEffect","map","ListPage","page","useParams","totalPages","useRef","current","Math","ceil","length","slice","Array","fill","item","index","ArticlePage","setPost","getPost","data","propTypes","PropTypes","shape","string","number","ABOUT","parse","AboutPage","InputArea","alert","Input","type","name","value","handleOnChange","htmlFor","onChange","target","FormCard","form","FormPage","ErrorMessage","p","PostPage","setTitle","setBody","errorMessage","setErrorMessage","onSubmit","event","method","JSON","stringify","ok","message","preventDefault","LoginPage","username","setUsername","password","setPassword","login","RegisterPage","nickname","setNickname","register","Blog","setIsGetAPI","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.847bf4df.chunk.js","sourcesContent":["export const COLOR = {\n  primary: \"#47717d\",\n  primaryDark: \"#3b5e68\",\n  primaryLight: \"#9ddbe6\",\n  alert: \"#F44335\",\n  black: \"#333333\",\n  white: \"#f5f5f5\",\n};\nexport const MEDIA = {\n  sm: \"@media (max-width: 381px)\",\n};\n\nexport const DISTENCE = {\n  xl: \"80px\",\n  lg: \"60px\",\n  md: \"30px\",\n  sm: \"20px\",\n  xs: \"10px\",\n};\n\nexport const FONT = {\n  lg: \"24px\",\n  md: \"20px\",\n  sm: \"16px\",\n  xs: \"12px\",\n};\n\nexport const EFFECT = {\n  shadowDark: `0px 1px 4px ${COLOR.primaryDark}30`,\n  shadowLight: `0px 1px 4px ${COLOR.primaryLight}80`,\n  block: `\n    display: block;\n    color: ${COLOR.primaryDark};\n    width: 100%;\n    padding: 10px;\n    border: 3px solid ${COLOR.primaryDark};\n    background: transparent;\n    box-shadow: 0px 1px 4px ${COLOR.primaryDark}30;\n  `,\n};\n","import { COLOR, MEDIA, EFFECT, DISTENCE, FONT } from \"../../constants/style\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const HeaderWrapper = styled.div`\n  width: 100%;\n  background: ${COLOR.white};\n  box-shadow: ${EFFECT.shadowDark};\n  position: fixed;\n  z-index: 2;\n  top: 0;\n`;\n\nexport const Wrapper = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  color: ${COLOR.primaryDark};\n  height: ${DISTENCE.lg};\n  ${MEDIA.sm} {\n    height: ${DISTENCE.xl};\n    flex-direction: column;\n  }\n`;\n\nexport const Brand = styled(Link)`\n  color: ${COLOR.primary};\n  font-size: ${FONT.lg};\n  font-weight: bold;\n  text-decoration: none;\n  padding: 0 ${DISTENCE.xs};\n`;\n","import styled from \"styled-components\";\nimport { COLOR, EFFECT, FONT } from \"../constants/style\";\nimport PropTypes from \"prop-types\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nconst ButtonUnderlineHover = styled.button`\n  background: none;\n  border: none;\n  display: inline-block;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${COLOR.primary};\n  font-size: inherit;\n  font-weight: bold;\n  padding: 10px;\n  & span {\n    z-index: 1;\n    position: relative;\n  }\n  & span::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background: ${COLOR.primaryLight};\n    transition: width 0.3s ease-in-out;\n    position: absolute;\n    height: 50%;\n    width: 0;\n    left: 10%;\n    bottom: -10%;\n  }\n  &:hover span::before,\n  &.active span::before,\n  &:focus span::before {\n    width: 100%;\n  }\n`;\n\nexport function ButtonLink({ isActive, content }) {\n  return (\n    <ButtonUnderlineHover className={isActive ? \"active\" : \"\"}>\n      <span>{content}</span>\n    </ButtonUnderlineHover>\n  );\n}\n\nButtonLink.propTypes = {\n  isActive: PropTypes.bool,\n  content: PropTypes.string,\n};\n\nexport const Button = styled.button`\n  z-index: 1;\n  ${EFFECT.block}\n  font-size: ${FONT.md};\n  font-weight: bold;\n  position: relative;\n  box-shadow: ${EFFECT.shadowDark};\n  &:hover {\n    color: ${COLOR.white};\n    font-weight: normal;\n  }\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background: ${COLOR.primaryDark};\n    transition: width 0.3s ease-in-out;\n    position: absolute;\n    height: 100%;\n    width: 0;\n    left: 0;\n    top: 0;\n  }\n  &:hover::before {\n    width: 100%;\n  }\n  &:active {\n    box-shadow: none;\n  }\n`;\n\nexport function Nav({ to, isExact, label }) {\n  const match = useRouteMatch({\n    path: to,\n    exact: isExact,\n  });\n  return (\n    <Link to={to}>\n      <ButtonLink isActive={match ? true : false} content={label} />\n    </Link>\n  );\n}\n\nNav.propTypes = {\n  to: PropTypes.string,\n  isExact: PropTypes.bool,\n  label: PropTypes.string,\n};\n\nexport const Pagination = styled.div`\n  text-align: center;\n`;\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token);\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","import { useLocation, useHistory, Link } from \"react-router-dom\";\nimport { HeaderWrapper, Wrapper, Container, Brand } from \"./style\";\nimport { Nav, ButtonLink } from \"../Button\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const { isGetAPI, user, setUser } = useContext(AuthContext);\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname === \"/post\") {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <HeaderWrapper>\n      <Wrapper>\n        <Container>\n          <Brand to=\"/\">\n            <ButtonLink isActive={true} content=\"ZoeHYH\" />\n          </Brand>\n          <div>\n            <Nav to=\"/list\" isExact={false} label=\"文章列表\" />\n            <Nav to=\"/about\" isExact={false} label=\"關於\" />\n            {user && <Nav to=\"/post\" isExact={true} label=\"發布文章\" />}\n            {isGetAPI && !user && (\n              <Nav to=\"/login\" isExact={true} label=\"登入\" />\n            )}\n            {isGetAPI && !user && (\n              <Nav to=\"/register\" isExact={true} label=\"註冊\" />\n            )}\n            {user && (\n              <span onClick={handleLogout}>\n                <ButtonLink isActive={false} content=\"登出\" />\n              </span>\n            )}\n          </div>\n        </Container>\n      </Wrapper>\n    </HeaderWrapper>\n  );\n}\n","import { getAuthToken } from \"./utils\";\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () => {\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc`\n  ).then((response) => response.json());\n};\n\nexport const getPostsPage = (page) => {\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}`\n  ).then((response) => response.json());\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((response) =>\n    response.json()\n  );\n};\n\nexport const getUser = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((response) => response.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({ username, password }),\n  }).then((response) => response.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({ nickname, username, password }),\n  }).then((response) => response.json());\n};\n\nexport const post = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ title, body }),\n  }).then((response) => response.json());\n};\n","import styled from \"styled-components\";\nimport { COLOR, DISTENCE, EFFECT, FONT } from \"../constants/style\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport const ArticleContainer = styled.div`\n  color: ${COLOR.primary};\n  padding: ${DISTENCE.xs};\n  max-width: 600px;\n  margin: 0 auto;\n  & + & {\n    border-top: 1px solid ${COLOR.primaryDark + \"30\"};\n  }\n  & h3 {\n    color: ${COLOR.primaryDark};\n    font-size: ${FONT.md};\n    font-weight: bold;\n    margin: 0 0 ${DISTENCE.xs};\n  }\n  & span {\n    display: block;\n    font-size: ${FONT.xs};\n  }\n  & p {\n    font-size: ${FONT.sm};\n    margin: ${DISTENCE.xs} 0;\n    letter-spacing: 2px;\n    white-space: pre-line;\n    word-break: break-all;\n  }\n`;\n\nconst ArticleHoverContainer = styled(ArticleContainer)`\n  display: block;\n  text-decoration: none;\n  &:hover {\n    box-shadow: ${EFFECT.shadowDark};\n  }\n`;\n\nfunction ArticleContent({ post, paragraph }) {\n  return (\n    <>\n      <h3>{post.title}</h3>\n      <span>{new Date(post.createdAt).toLocaleString()}</span>\n      {paragraph && <p>{post.body}</p>}\n    </>\n  );\n}\n\nexport function Article({ post, hover, $center, paragraph }) {\n  if (hover)\n    return (\n      <ArticleHoverContainer\n        as={Link}\n        to={`/article-${post.id}`}\n        $center={$center}\n      >\n        <ArticleContent post={post} paragraph={paragraph} />\n      </ArticleHoverContainer>\n    );\n  return (\n    <ArticleContainer $center={$center}>\n      <ArticleContent post={post} paragraph={paragraph} />\n    </ArticleContainer>\n  );\n}\n\nArticle.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.number,\n    id: PropTypes.number,\n  }),\n  hover: PropTypes.bool,\n  $center: PropTypes.bool,\n  paragraph: PropTypes.bool,\n};\nArticleContent.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.number,\n    id: PropTypes.number,\n  }),\n  paragraph: PropTypes.bool,\n};\n","import styled from \"styled-components\";\nimport { COLOR, DISTENCE, MEDIA } from \"../constants/style\";\n\nexport const Page = styled.div`\n  color: ${COLOR.primaryDark};\n  margin-top: ${DISTENCE.lg};\n  padding: ${DISTENCE.xs} ${DISTENCE.xs};\n  ${MEDIA.sm} {\n    margin-top: ${DISTENCE.xl};\n  }\n`;\n\nexport const PageCenter = styled.div`\n  color: ${COLOR.primaryDark};\n  margin-top: ${DISTENCE.lg};\n  padding: 15vh ${DISTENCE.xs};\n  display: flex;\n  justify-content: center;\n  position: relative;\n  ${MEDIA.sm} {\n    margin-top: ${DISTENCE.xl};\n  }\n`;\n","import { getPosts } from \"../WebApi\";\nimport { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Article } from \"../components/Article\";\nimport { Page } from \"../components/Page\";\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState();\n  useEffect(() => {\n    getPosts().then((posts) => setPosts(posts));\n  }, []);\n  return (\n    <Page>\n      {posts &&\n        posts.map((post) => (\n          <Article\n            key={post.id}\n            post={post}\n            hover={true}\n            $center={true}\n            paragraph={false}\n          />\n        ))}\n    </Page>\n  );\n}\n\nArticle.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.number,\n    id: PropTypes.number,\n  }),\n};\n","import { getPosts } from \"../WebApi\";\nimport { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Article } from \"../components/Article\";\nimport { Page } from \"../components/Page\";\nimport { useParams } from \"react-router-dom\";\nimport { Nav, Pagination } from \"../components/Button\";\n\nexport default function ListPage() {\n  let { page } = useParams();\n  const LIMIT = 10;\n  const [posts, setPosts] = useState();\n  let totalPages = useRef();\n  useEffect(() => {\n    getPosts().then((posts) => {\n      totalPages.current = Math.ceil(posts.length / LIMIT);\n      setPosts(posts.slice((page - 1) * LIMIT, page * LIMIT));\n    });\n  }, [page]);\n  return (\n    <Page>\n      {posts &&\n        posts.map((post) => (\n          <Article\n            key={post.id}\n            post={post}\n            hover={true}\n            $center={true}\n            paragraph={true}\n          />\n        ))}\n      {posts && (\n        <Pagination>\n          {new Array(totalPages.current).fill(\"\").map((item, index) => {\n            return (\n              <Nav\n                key={index}\n                to={`/list/${index + 1}`}\n                isExact={false}\n                label={`${index + 1}`}\n              />\n            );\n          })}\n        </Pagination>\n      )}\n    </Page>\n  );\n}\n\nArticle.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.number,\n    id: PropTypes.number,\n  }),\n};\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getPost } from \"../WebApi\";\nimport { Article } from \"../components/Article\";\nimport { Page } from \"../components/Page\";\n\nexport default function ArticlePage() {\n  const { id } = useParams();\n  const [post, setPost] = useState();\n  useEffect(() => {\n    getPost(id).then((data) => setPost(data[0]));\n  }, [id]);\n  return (\n    <Page>\n      {post && (\n        <Article post={post} hover={false} $center={true} paragraph={true} />\n      )}\n    </Page>\n  );\n}\n","export const ABOUT = {\n  id: 0,\n  title: \"關於這個部落格\",\n  createdAt: Date.parse(\"2020-11-27T16:30:00\"),\n  body: `\n    這個部落格 SPA 使用 React 製作，並使用 Redux 這套架構管理資料，前端路由則是用 React Router DOM 這套 Library 實作。註冊後，密碼都會是 \"Lidemy\"。\n  `,\n};\n","import { Article } from \"../components/Article\";\nimport { Page } from \"../components/Page\";\nimport { ABOUT } from \"../constants/text\";\n\nexport default function AboutPage() {\n  return (\n    <Page>\n      <Article post={ABOUT} hover={false} $center={true} paragraph={true} />\n    </Page>\n  );\n}\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLOR, DISTENCE, EFFECT, FONT } from \"../constants/style\";\n\nconst InputArea = styled.div`\n  display: block;\n  width: 100%;\n  &:last-of-type {\n    margin-bottom: 30px;\n  }\n  & label {\n    display: block;\n    color: ${COLOR.primary};\n    font-size: ${FONT.sm};\n    font-weight: bold;\n    margin: ${DISTENCE.xs};\n    ${({ alert }) => (alert ? `color: ${COLOR.alert}` : \"\")}\n  }\n  & input,\n  & textarea {\n    ${EFFECT.block}\n    font-size: ${FONT.md};\n    font-family: initial;\n    ${({ alert }) => (alert ? `border: 3px solid ${COLOR.alert}` : \"\")}\n  }\n  & textarea {\n    height: 50vh;\n  }\n`;\n\nexport function Input({ content, type, name, alert, value, handleOnChange }) {\n  return (\n    <InputArea alert={alert}>\n      <label htmlFor={name}>{content}</label>\n      {type === \"textarea\" ? (\n        <textarea\n          id={name}\n          value={value}\n          onChange={({ target }) => handleOnChange(target.value)}\n        />\n      ) : (\n        <input\n          type={type}\n          id={name}\n          value={value}\n          onChange={({ target }) => handleOnChange(target.value)}\n        />\n      )}\n    </InputArea>\n  );\n}\n\nInput.propTypes = {\n  content: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  alert: PropTypes.bool,\n  handleOnChange: PropTypes.func,\n};\n","import styled from \"styled-components\";\n\nexport const FormCard = styled.form`\n  width: 320px;\n  position: relative;\n`;\n\nexport const FormPage = styled.form`\n  max-width: 600px;\n  margin: 0 auto;\n  position: relative;\n`;\n","import styled from \"styled-components\";\nimport { COLOR, DISTENCE } from \"../constants/style\";\n\nexport const ErrorMessage = styled.p`\n  color: ${COLOR.alert};\n  margin: 0;\n  text-align: center;\n  display: block;\n  position: absolute;\n  bottom: ${DISTENCE.md};\n  right: 0;\n  left: 0;\n`;\n","import { Input } from \"../components/Input\";\nimport { Page } from \"../components/Page\";\nimport { FormPage } from \"../components/Form\";\nimport { useState } from \"react\";\nimport { Button } from \"../components/Button\";\nimport { ErrorMessage } from \"../components/ErrorMessage\";\nimport { post } from \"../WebApi\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function PostPage() {\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const handleOnSubmit = (event) => {\n    post(title, body).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      history.push(\"/\");\n    });\n    event.preventDefault();\n  };\n  return (\n    <Page>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      <FormPage onSubmit={handleOnSubmit}>\n        <Input\n          content=\"標題\"\n          type=\"text\"\n          name=\"title\"\n          alert={errorMessage ? true : false}\n          value={title}\n          handleOnChange={(value) => setTitle(value)}\n        />\n        <Input\n          content=\"內文\"\n          type=\"textarea\"\n          name=\"body\"\n          alert={errorMessage ? true : false}\n          value={body}\n          handleOnChange={(value) => setBody(value)}\n        />\n        <Button>發布</Button>\n      </FormPage>\n    </Page>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport { getUser, login } from \"../WebApi\";\nimport { setAuthToken } from \"../utils\";\nimport { FormCard } from \"../components/Form\";\nimport { ErrorMessage } from \"../components/ErrorMessage\";\nimport { Button } from \"../components/Button\";\nimport { Input } from \"../components/Input\";\nimport { PageCenter } from \"../components/Page\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts\";\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const handleOnSubmit = (event) => {\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getUser().then((data) => {\n        if (data.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(JSON.stringify(data));\n        }\n        setUser(data.data);\n        history.push(\"/\");\n      });\n    });\n    event.preventDefault();\n  };\n  return (\n    <PageCenter>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      <FormCard onSubmit={handleOnSubmit}>\n        <Input\n          content=\"帳號\"\n          type=\"text\"\n          name=\"username\"\n          alert={errorMessage ? true : false}\n          value={username}\n          handleOnChange={(value) => setUsername(value)}\n        ></Input>\n        <Input\n          content=\"密碼\"\n          type=\"password\"\n          name=\"password\"\n          alert={errorMessage ? true : false}\n          value={password}\n          handleOnChange={(value) => setPassword(value)}\n        ></Input>\n        <Button>登入</Button>\n      </FormCard>\n    </PageCenter>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport { getUser, register } from \"../WebApi\";\nimport { setAuthToken } from \"../utils\";\nimport { FormCard } from \"../components/Form\";\nimport { ErrorMessage } from \"../components/ErrorMessage\";\nimport { Button } from \"../components/Button\";\nimport { Input } from \"../components/Input\";\nimport { PageCenter } from \"../components/Page\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts\";\n\nexport default function RegisterPage() {\n  const { setUser } = useContext(AuthContext);\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const handleOnSubmit = (event) => {\n    register(nickname, username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getUser().then((data) => {\n        if (data.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(JSON.stringify(data));\n        }\n        setUser(data.data);\n        history.push(\"/\");\n      });\n    });\n    event.preventDefault();\n  };\n  return (\n    <PageCenter>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      <FormCard onSubmit={handleOnSubmit}>\n        <Input\n          content=\"暱稱\"\n          type=\"text\"\n          name=\"nickname\"\n          alert={errorMessage ? true : false}\n          value={nickname}\n          handleOnChange={(value) => setNickname(value)}\n        ></Input>\n        <Input\n          content=\"帳號\"\n          type=\"text\"\n          name=\"username\"\n          alert={errorMessage ? true : false}\n          value={username}\n          handleOnChange={(value) => setUsername(value)}\n        ></Input>\n        <Input\n          content=\"密碼\"\n          type=\"password\"\n          name=\"password\"\n          alert={errorMessage ? true : false}\n          value={password}\n          handleOnChange={(value) => setPassword(value)}\n        ></Input>\n        <Button>{\"註冊\"}</Button>\n      </FormCard>\n    </PageCenter>\n  );\n}\n","import Header from \"../Header\";\nimport HomePage from \"../../Page/HomePage\";\nimport ListPage from \"../../Page/ListPage\";\nimport ArticlePage from \"../../Page/ArticlePage\";\nimport AboutPage from \"../../Page/AboutPage\";\nimport PostPage from \"../../Page/PostPage\";\nimport LoginPage from \"../../Page/LoginPage\";\nimport RegisterPage from \"../../Page/RegisterPage\";\nimport { AuthContext } from \"../../contexts\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getUser } from \"../../WebApi\";\nimport { getAuthToken } from \"../../utils\";\n\nexport default function Blog() {\n  const [isGetAPI, setIsGetAPI] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    if (getAuthToken())\n      getUser().then((data) => {\n        if (data.ok) {\n          setUser(data.data);\n        }\n      });\n    setIsGetAPI(true);\n  }, []);\n  return (\n    <AuthContext.Provider value={{ isGetAPI, setIsGetAPI, user, setUser }}>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/list\">\n            <Redirect to=\"/list/1\" />\n          </Route>\n          <Route exact path=\"/list/:page\">\n            <ListPage />\n          </Route>\n          <Route exact path=\"/article-:id\">\n            <ArticlePage />\n          </Route>\n          <Route exact path=\"/about\">\n            <AboutPage />\n          </Route>\n          {user && (\n            <Route exact path=\"/post\">\n              <PostPage />\n            </Route>\n          )}\n          {!user && (\n            <>\n              <Route exact path=\"/login\">\n                <LoginPage />\n              </Route>\n              <Route exact path=\"/register\">\n                <RegisterPage />\n              </Route>\n            </>\n          )}\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Blog from \"./components/Blog\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<Blog />, document.getElementById(\"root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}